package tp.entity.customers;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

//------ lombok generation code annotations ------
@Getter @Setter
@ToString(exclude={"address"})
//@EqualsAndHashCode
@NoArgsConstructor
@AllArgsConstructor
//------------------------------------------------

@Entity
@Table(name="customers.Customer")
public class Customer {
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	/* IDENTITY is ok for :
	           H2 (GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)), 
	           MYSQL (auto_increment)
	           POSTGRES (SERIAL or BIG_SERIAL) if not forced .
	   But not for Oracle <= v11 --> META-INF/orm/oracle-orm.xml may be used to override IDENTITY
	*/
	private Long id;
	
	private String firstName;
	private String lastName;
	private String email;
	private String phoneNumber;
	
	@ManyToOne()
	@JoinColumn(name="addressId")
	private Address address;
	

}
